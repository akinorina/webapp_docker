#
# docker-compose.yml
#
version: "3.9"
services:
  #
  # database by MySQL
  #
  database:
    container_name: database
    hostname: ${DATABASE_HOST}
    image: mysql
    volumes:
      - database_data:/var/lib/mysql
      - ./database/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    environment:
      TZ: Asia/Tokyo
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASS}
      MYSQL_DATABASE: ${DATABASE_NAME}
    networks:
      - backend
    healthcheck:
      test: mysqladmin ping -h0.0.0.0 -P3306 -u$$MYSQL_USER -p$$MYSQL_PASSWORD
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  #
  # phpMyAdmin
  #
  database_admin:
    container_name: database_admin
    hostname: phpmyadmin
    image: phpmyadmin
    restart: always
    volumes:
      - phpmyadmin_data:/sessions
    ports:
      - 8080:80
    environment:
      TZ: Asia/Tokyo
      PMA_ARBITRARY: 1
      PMA_HOSTS: ${DATABASE_HOST}
      PMA_USER: ${DATABASE_USER}
      PMA_PASSWORD: ${DATABASE_PASS}
    networks:
      - backend
    depends_on:
      - database

  #
  # SMTP by mailpit
  #
  smtp:
    container_name: smtp
    image: axllent/mailpit
    restart: always
    volumes:
      - mail_data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - backend

  #
  # server application by NestJS
  #
  backend-app:
    container_name: backend-app
    build:
      context: ../webapp_server_nestjs
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    networks:
      - backend
    environment:
      # Database (MySQL)
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASS: ${DATABASE_PASS}
      DATABASE_NAME: ${DATABASE_NAME}
      # SMTP
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
    depends_on:
      database:
        condition: service_healthy
      smtp:
        condition: service_started

  #
  # client application by Nuxt3
  #
  frontend-app:
    container_name: frontend-app
    build: ../webapp_client_nuxt3
    ports:
      - 4000:4000
    environment:
      TZ: Asia/Tokyo
    networks:
      - backend
    tty: true
    depends_on:
      backend-app:
        condition: service_started

  #
  # reverse-proxy by Nginx
  #
  reverse-proxy:
    container_name: reverse-proxy
    image: nginx:1.25.3
    build: ./reverse-proxy
    ports:
      - 8000:8000
    volumes:
      - ./reverse-proxy/log:/var/log/nginx
    networks:
      - backend
    depends_on:
      backend-app:
        condition: service_started
      frontend-app:
        condition: service_started

networks:
  backend: {}

volumes:
  database_data: null
  phpmyadmin_data: null
  mail_data: null
